services:
    # GATEWAY
    gateway:
        build: ./services/gateway
        environment:
            PORT: ${SERVER_PORT}
        ports:
            - 80:${SERVER_PORT}
        networks:
            - network
        volumes:
            - ./html:/app/html
            - ./static:/app/static
        restart: always

    # USER
    user:
        build: ./services/user
        environment:
            PORT: ${SERVER_PORT}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            JWT_SECRET: ${JWT_SECRET}
        networks:
            - network
        restart: always

    user-postgres:
        image: postgres:17.4
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - network
        volumes:
            - ./sql/user-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
            - user-postgres-data:/var/lib/postgresql/data
        restart: always

    user-redis:
        image: redis:7.4.2
        volumes:
            - user-redis-data:/data
        networks:
            - network

    # PROJECT
    project:
        build: ./services/project
        environment:
            PORT: ${SERVER_PORT}
            JWT_SECRET: ${JWT_SECRET}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - network
        restart: always

    project-postgres:
        image: postgres:17.4
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - network
        volumes:
            - ./sql/project-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
            - project-postgres-data:/var/lib/postgresql/data
        restart: always

    # ADMIN
    adminer:
        image: adminer
        ports:
            - 8080:8080
        networks:
            - network
        restart: always

    redisinsight:
        image: redis/redisinsight:latest
        ports:
            - 5540:5540
        networks:
            - network

networks:
    network:
        driver: bridge

volumes:
    user-redis-data: null
    user-postgres-data: null
    project-postgres-data: null
